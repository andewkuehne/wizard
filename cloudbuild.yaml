steps:
# Step 1: MongoDB Setup
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'mongodb-setup'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud builds submit --config=mongodb-setup.yaml \
    --substitutions=_ZONE=${_ZONE},_MACHINE_TYPE=${_MACHINE_TYPE},_BACKUP_BUCKET=${_BACKUP_BUCKET}

# GKE Setup
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'gke-setup'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud builds submit --config=gke-setup.yaml \
    --substitutions=_ZONE=${_ZONE},_CLUSTER_NAME=${_CLUSTER_NAME},_NODE_COUNT=${_NODE_COUNT}

# Step 3: Get GKE credentials
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'get-credentials'
  args:
  - 'container'
  - 'clusters'
  - 'get-credentials'
  - '${_CLUSTER_NAME}'
  - '--zone=${_ZONE}'
  - '--project=${PROJECT_ID}'

# Step 4: Traefik Setup
- name: 'gcr.io/cloud-builders/kubectl'
  id: 'traefik-setup'
  args: ['apply', '-f', 'traefik-config.yml']

# Step 5: Build and push Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-image'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/tasky-app:v1', '.']
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-image'
  args: ['push', 'gcr.io/${PROJECT_ID}/tasky-app:v1']

# Step 6: Create Kubernetes secret
- name: 'gcr.io/cloud-builders/kubectl'
  id: 'create-secret'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    kubectl create secret generic mongodb-secret \
      --from-literal=uri="mongodb://admin:$$MONGODB_PASSWORD@$(gcloud compute instances describe mongodb-vm --zone=${_ZONE} --format='get(networkInterfaces[0].networkIP)'):27017/admin" \
      --dry-run=client -o yaml | kubectl apply -f -
  secretEnv: ['MONGODB_PASSWORD']

# Step 7: Apply Kubernetes Deployment
- name: 'gcr.io/cloud-builders/kubectl'
  id: 'apply-k8s-deployment'
  args:
  - 'apply'
  - '-f'
  - 'k8s-deployment.yml'

substitutions:
  _ZONE: us-central1-a
  _CLUSTER_NAME: tasky-cluster
  _NODE_COUNT: "3"
  _MACHINE_TYPE: e2-medium
  _BACKUP_BUCKET: ${PROJECT_ID}-mongodb-backups

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/mongodb-password/versions/latest
    env: 'MONGODB_PASSWORD'

options:
  logging: CLOUD_LOGGING_ONLY
